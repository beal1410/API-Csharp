// <auto-generated />
using System;
using API_287.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API_287.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API_287.Models.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("API_287.Models.Author", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("API_287.Models.Bill", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("FraisPaye")
                        .HasColumnType("numeric");

                    b.Property<int>("IdEmprunt")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("IdEmprunt");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("API_287.Models.Book", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdAuteur")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("IdAuteur");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("API_287.Models.Copy", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("EtatDuLivre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdLivre")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("IdLivre");

                    b.ToTable("Copies");
                });

            modelBuilder.Entity("API_287.Models.Loan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("DateEmprunt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateRetourPrev")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateRetourReel")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdExemplaire")
                        .HasColumnType("integer");

                    b.Property<int>("IdUtilisateur")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("IdExemplaire");

                    b.HasIndex("IdUtilisateur");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("API_287.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Couriel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdAdresse")
                        .HasColumnType("integer");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("IdAdresse");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API_287.Models.Bill", b =>
                {
                    b.HasOne("API_287.Models.Loan", "Emprunt")
                        .WithMany()
                        .HasForeignKey("IdEmprunt")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emprunt");
                });

            modelBuilder.Entity("API_287.Models.Book", b =>
                {
                    b.HasOne("API_287.Models.Author", "Auteur")
                        .WithMany("Livres")
                        .HasForeignKey("IdAuteur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auteur");
                });

            modelBuilder.Entity("API_287.Models.Copy", b =>
                {
                    b.HasOne("API_287.Models.Book", "Livre")
                        .WithMany("Exemplaires")
                        .HasForeignKey("IdLivre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livre");
                });

            modelBuilder.Entity("API_287.Models.Loan", b =>
                {
                    b.HasOne("API_287.Models.Copy", "Exemplaire")
                        .WithMany()
                        .HasForeignKey("IdExemplaire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_287.Models.User", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("IdUtilisateur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exemplaire");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("API_287.Models.User", b =>
                {
                    b.HasOne("API_287.Models.Address", "Adresse")
                        .WithMany()
                        .HasForeignKey("IdAdresse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("API_287.Models.Author", b =>
                {
                    b.Navigation("Livres");
                });

            modelBuilder.Entity("API_287.Models.Book", b =>
                {
                    b.Navigation("Exemplaires");
                });
#pragma warning restore 612, 618
        }
    }
}
